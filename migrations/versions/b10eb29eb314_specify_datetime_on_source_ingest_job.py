"""specify datetime on source ingest job

Revision ID: b10eb29eb314
Revises: 206f65b2b504
Create Date: 2020-12-03 20:39:50.420123

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b10eb29eb314'
down_revision = '206f65b2b504'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('source_object_id_g_fkey', 'source', type_='foreignkey')
    op.drop_constraint('source_object_id_r_fkey', 'source', type_='foreignkey')
    op.drop_constraint('source_object_id_i_fkey', 'source', type_='foreignkey')
    op.create_foreign_key(None, 'source', 'object', ['object_id_r'], ['id'], source_schema='puzle', referent_schema='puzle')
    op.create_foreign_key(None, 'source', 'object', ['object_id_i'], ['id'], source_schema='puzle', referent_schema='puzle')
    op.create_foreign_key(None, 'source', 'object', ['object_id_g'], ['id'], source_schema='puzle', referent_schema='puzle')
    op.add_column('source_ingest_job', sa.Column('datetime_finished', sa.DateTime(), nullable=True))
    op.add_column('source_ingest_job', sa.Column('datetime_started', sa.DateTime(), nullable=True))
    op.drop_column('source_ingest_job', 'datetime')
    op.drop_constraint('user_source_association_user_id_fkey', 'user_source_association', type_='foreignkey')
    op.drop_constraint('user_source_association_source_id_fkey', 'user_source_association', type_='foreignkey')
    op.create_foreign_key(None, 'user_source_association', 'user', ['user_id'], ['id'], source_schema='puzle', referent_schema='puzle')
    op.create_foreign_key(None, 'user_source_association', 'source', ['source_id'], ['id'], source_schema='puzle', referent_schema='puzle')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_source_association', schema='puzle', type_='foreignkey')
    op.drop_constraint(None, 'user_source_association', schema='puzle', type_='foreignkey')
    op.create_foreign_key('user_source_association_source_id_fkey', 'user_source_association', 'source', ['source_id'], ['id'])
    op.create_foreign_key('user_source_association_user_id_fkey', 'user_source_association', 'user', ['user_id'], ['id'])
    op.add_column('source_ingest_job', sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('source_ingest_job', 'datetime_started')
    op.drop_column('source_ingest_job', 'datetime_finished')
    op.drop_constraint(None, 'source', schema='puzle', type_='foreignkey')
    op.drop_constraint(None, 'source', schema='puzle', type_='foreignkey')
    op.drop_constraint(None, 'source', schema='puzle', type_='foreignkey')
    op.create_foreign_key('source_object_id_i_fkey', 'source', 'object', ['object_id_i'], ['id'])
    op.create_foreign_key('source_object_id_r_fkey', 'source', 'object', ['object_id_r'], ['id'])
    op.create_foreign_key('source_object_id_g_fkey', 'source', 'object', ['object_id_g'], ['id'])
    # ### end Alembic commands ###
